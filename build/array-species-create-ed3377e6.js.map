{"version":3,"file":"array-species-create-ed3377e6.js","sources":["../node_modules/core-js/internals/array-species-constructor.js","../node_modules/core-js/internals/array-species-create.js","../node_modules/core-js/internals/function-bind-context.js"],"sourcesContent":["var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n"],"names":["SPECIES","wellKnownSymbol","originalArray","length","C","isArray","constructor","Array","prototype","isObject","undefined","fn","that","aFunction","call","a","b","c","apply","arguments"],"mappings":"+HAIIA,EAAUC,kBAAgB,sCCAb,SAAUC,EAAeC,GACxC,OAAO,IDGQ,SAAUD,GACzB,IAAIE,EASF,OAREC,UAAQH,KAGM,mBAFhBE,EAAIF,EAAcI,cAEaF,IAAMG,QAASF,UAAQD,EAAEI,WAC/CC,WAASL,IAEN,QADVA,EAAIA,EAAEJ,MACUI,OAAIM,GAH+CN,OAAIM,QAK5DA,IAANN,EAAkBG,MAAQH,GCbCF,GAA7B,CAAwD,IAAXC,EAAe,EAAIA,gCCFxD,SAAUQ,EAAIC,EAAMT,GAEnC,GADAU,YAAUF,QACGD,IAATE,EAAoB,OAAOD,EAC/B,OAAQR,GACN,KAAK,EAAG,OAAO,WACb,OAAOQ,EAAGG,KAAKF,IAEjB,KAAK,EAAG,OAAO,SAAUG,GACvB,OAAOJ,EAAGG,KAAKF,EAAMG,IAEvB,KAAK,EAAG,OAAO,SAAUA,EAAGC,GAC1B,OAAOL,EAAGG,KAAKF,EAAMG,EAAGC,IAE1B,KAAK,EAAG,OAAO,SAAUD,EAAGC,EAAGC,GAC7B,OAAON,EAAGG,KAAKF,EAAMG,EAAGC,EAAGC,IAG/B,OAAO,WACL,OAAON,EAAGO,MAAMN,EAAMO"}