{"version":3,"file":"es.array.filter-02364506.js","sources":["../node_modules/core-js/internals/array-iteration.js","../node_modules/core-js/modules/es.array.filter.js"],"sourcesContent":["var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push.call(target, value); // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"names":["push","createMethod","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","$this","callbackfn","that","specificCreate","value","result","O","toObject","self","IndexedObject","boundFunction","bind","length","toLength","index","create","arraySpeciesCreate","target","undefined","call","forEach","map","filter","some","every","find","findIndex","filterReject","$filter","require$$0","HAS_SPECIES_SUPPORT","arrayMethodHasSpeciesSupport","$","proto","forced","this","arguments"],"mappings":"iNAMIA,EAAO,GAAGA,KAGVC,EAAe,SAAUC,GAC3B,IAAIC,EAAiB,GAARD,EACTE,EAAoB,GAARF,EACZG,EAAkB,GAARH,EACVI,EAAmB,GAARJ,EACXK,EAAwB,GAARL,EAChBM,EAA2B,GAARN,EACnBO,EAAmB,GAARP,GAAaK,EAC5B,OAAO,SAAUG,EAAOC,EAAYC,EAAMC,GASxC,IARA,IAOIC,EAAOC,EAPPC,EAAIC,WAASP,GACbQ,EAAOC,gBAAcH,GACrBI,EAAgBC,sBAAKV,EAAYC,EAAM,GACvCU,EAASC,WAASL,EAAKI,QACvBE,EAAQ,EACRC,EAASZ,GAAkBa,qBAC3BC,EAASxB,EAASsB,EAAOf,EAAOY,GAAUlB,GAAaI,EAAmBiB,EAAOf,EAAO,QAAKkB,EAE3FN,EAASE,EAAOA,IAAS,IAAIf,GAAYe,KAASN,KAEtDH,EAASK,EADTN,EAAQI,EAAKM,GACiBA,EAAOR,GACjCd,GACF,GAAIC,EAAQwB,EAAOH,GAAST,OACvB,GAAIA,EAAQ,OAAQb,GACvB,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAOY,EACf,KAAK,EAAG,OAAOU,EACf,KAAK,EAAGxB,EAAK6B,KAAKF,EAAQb,QACrB,OAAQZ,GACb,KAAK,EAAG,OAAO,EACf,KAAK,EAAGF,EAAK6B,KAAKF,EAAQb,GAIhC,OAAOP,GAAiB,EAAIF,GAAWC,EAAWA,EAAWqB,MAIhD,CAGfG,QAAS7B,EAAa,GAGtB8B,IAAK9B,EAAa,GAGlB+B,OAAQ/B,EAAa,GAGrBgC,KAAMhC,EAAa,GAGnBiC,MAAOjC,EAAa,GAGpBkC,KAAMlC,EAAa,GAGnBmC,UAAWnC,EAAa,GAGxBoC,aAAcpC,EAAa,ICpEzBqC,EAAUC,EAAwCP,OAGlDQ,EAAsBC,+BAA6B,UAKvDC,UAAE,CAAEf,OAAQ,QAASgB,OAAO,EAAMC,QAASJ,GAAuB,CAChER,OAAQ,SAAgBrB,GACtB,OAAO2B,EAAQO,KAAMlC,EAAYmC,UAAUxB,OAAS,EAAIwB,UAAU,QAAKlB"}