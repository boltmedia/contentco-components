{"version":3,"file":"DualInput.js","sources":["../src/Input/DualInput.jsx"],"sourcesContent":["import React, { useState, useRef, memo } from 'react';\n\nimport classNames from 'classnames';\n\nimport InputMask from 'react-input-mask';\n\nimport InitialSelect from 'react-select';\nimport { useGlobalEvent } from 'beautiful-react-hooks';\nimport Styles from './Input.module.scss';\n\nconst Select = memo(InitialSelect);\n\nconst SHRINK_THRESHOLD = 245;\n\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided\n  }),\n  input: (styles) => ({\n    ...styles,\n    margin: 0,\n    padding: 0\n  }),\n  menu: (styles) => ({\n    ...styles,\n    margin: '2px 0'\n  }),\n  placeholder: (styles) => ({\n    ...styles\n  }),\n  control: (styles) => ({\n    ...styles,\n    boxShadow: 'none',\n    ':hover': {\n      borderColor: '#a1aab3'\n    }\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: '2px 15px',\n    fontSize: '16px'\n  }),\n  singleValue: (styles) => ({\n    ...styles,\n    marginLeft: '0',\n    fontSize: '16px'\n  })\n};\n\nconst isSmall = (container) => {\n  return container.offsetWidth <= SHRINK_THRESHOLD;\n};\n\nconst DummyElem = () => <div />;\n\nconst DualInput = ({ input, select, className }) => {\n  const inputProps = input(DummyElem).props;\n\n  const {\n    onChange: onSelectChange,\n    disabled: selectDisabled,\n    ...selectProps\n  } = select(DummyElem).props;\n\n  const elementRef = useRef(null);\n\n  const [shouldShrink, setShouldShrink] = useState(false);\n  const onWindowResize = useGlobalEvent('resize');\n\n  const [selectValue, setSelectValue] = useState(\n    selectProps.value || selectProps.defaultValue\n  );\n  const containerClass = classNames(\n    className,\n    Styles.container,\n    Styles.dualContainer,\n    shouldShrink && Styles.shrink\n  );\n\n  const selectClass = classNames(Styles.select);\n  const labelClass = classNames(Styles.label, inputProps.error && Styles.error);\n\n  const handleChange = (event, { action, name }) => {\n    // Pass any other change events from parent\n    try {\n      onSelectChange({\n        ...event,\n        target: { name, value: event },\n        action\n      });\n    } catch (err) {}\n  };\n\n  onWindowResize((event) => {\n    setShouldShrink(isSmall(elementRef.current));\n  });\n\n  const Elem = inputProps.mask ? InputMask : 'input';\n\n  return (\n    <div\n      className={containerClass}\n      style={{ display: 'flex', width: '100%' }}\n      ref={elementRef}\n    >\n      <div className={Styles.dualInput}>\n        <Elem\n          className={classNames(Styles.base, Styles.input)}\n          placeholder={inputProps.placeholder || inputProps.label}\n          {...inputProps}\n        />\n        <label htmlFor={inputProps.name} className={labelClass}>\n          {inputProps.error || inputProps.label}\n        </label>\n      </div>\n      <div className={Styles.dualSelect} style={selectProps.style}>\n        <Select\n          className={selectClass}\n          styles={customStyles}\n          placeholder={selectProps.label}\n          onChange={handleChange}\n          additional={{ page: 1 }}\n          createOptionPosition={'first'}\n          classNamePrefix='s-contact'\n          isDisabled={selectDisabled}\n          {...selectProps}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DualInput;\n"],"names":["Select","memo","InitialSelect","customStyles","option","provided","state","input","styles","margin","padding","menu","placeholder","control","boxShadow","borderColor","valueContainer","fontSize","singleValue","marginLeft","DummyElem","React","select","className","inputProps","props","onSelectChange","onChange","selectDisabled","disabled","selectProps","elementRef","useRef","useState","shouldShrink","setShouldShrink","onWindowResize","useGlobalEvent","value","defaultValue","containerClass","classNames","Styles","container","dualContainer","shrink","selectClass","labelClass","label","error","event","current","offsetWidth","Elem","mask","InputMask","style","display","width","ref","dualInput","base","htmlFor","name","dualSelect","action","target","err","additional","page","createOptionPosition","classNamePrefix","isDisabled"],"mappings":"w8CAUA,IAAMA,EAASC,OAAKC,WAIdC,EAAe,CACnBC,OAAQ,SAACC,EAAUC,eACdD,IAELE,MAAO,SAACC,iBACHA,OACHC,OAAQ,EACRC,QAAS,KAEXC,KAAM,SAACH,iBACFA,OACHC,OAAQ,WAEVG,YAAa,SAACJ,eACTA,IAELK,QAAS,SAACL,iBACLA,OACHM,UAAW,gBACD,CACRC,YAAa,cAGjBC,eAAgB,SAACR,iBACZA,OACHE,QAAS,WACTO,SAAU,UAEZC,YAAa,SAACV,iBACTA,OACHW,WAAY,IACZF,SAAU,WAQRG,EAAY,kBAAMC,oDAEN,gBAAGd,IAAAA,MAAOe,IAAAA,OAAQC,IAAAA,UAC5BC,EAAajB,EAAMa,GAAWK,QAMhCH,EAAOF,GAAWK,MAHVC,IAAVC,SACUC,IAAVC,SACGC,kCAGCC,EAAaC,SAAO,QAEcC,YAAS,2BAA1CC,OAAcC,OACfC,EAAiBC,iBAAe,YAEAJ,WACpCH,EAAYQ,OAASR,EAAYS,oDAE7BC,EAAiBC,UACrBlB,EACAmB,cAAOC,UACPD,cAAOE,cACPV,GAAgBQ,cAAOG,QAGnBC,EAAcL,UAAWC,cAAOpB,QAChCyB,EAAaN,UAAWC,cAAOM,MAAOxB,EAAWyB,OAASP,cAAOO,OAavEb,GAAe,SAACc,GACdf,EAAwBJ,EAAWoB,QA5CpBC,aAtCM,YAqFjBC,EAAO7B,EAAW8B,KAAOC,UAAY,eAGzClC,+BACEE,UAAWiB,EACXgB,MAAO,CAAEC,QAAS,OAAQC,MAAO,QACjCC,IAAK5B,GAELV,+BAAKE,UAAWmB,cAAOkB,WACrBvC,wBAACgC,cACC9B,UAAWkB,UAAWC,cAAOmB,KAAMnB,cAAOnC,OAC1CK,YAAaY,EAAWZ,aAAeY,EAAWwB,OAC9CxB,IAENH,iCAAOyC,QAAStC,EAAWuC,KAAMxC,UAAWwB,GACzCvB,EAAWyB,OAASzB,EAAWwB,QAGpC3B,+BAAKE,UAAWmB,cAAOsB,WAAYR,MAAO1B,EAAY0B,OACpDnC,wBAACrB,cACCuB,UAAWuB,EACXtC,OAAQL,EACRS,YAAakB,EAAYkB,MACzBrB,SAtCa,SAACuB,SAASe,IAAAA,OAAQF,IAAAA,SAGnCrC,SACKwB,OACHgB,OAAQ,CAAEH,KAAAA,EAAMzB,MAAOY,GACvBe,OAAAA,KAEF,MAAOE,MA+BHC,WAAY,CAAEC,KAAM,GACpBC,qBAAsB,QACtBC,gBAAgB,YAChBC,WAAY5C,GACRE"}